/*
	(c) 2014 J.Seitter
	This file is part of Bacnet4J.

    Bacnet4J is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Bacnet4J is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Bacnet4J.  If not, see <http://www.gnu.org/licenses/>. 
 */

apply {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	apply plugin: 'osgi'
}

group = 'serotonin'
version = '1.0-SNAPSHOT'
def buildNumber = System.getenv()['BUILD_NUMBER']
if(buildNumber==null) buildNumber='LOCAL'

sourceCompatibility = 1.7
targetCompatibility = 1.7

defaultTasks 'build'

repositories {
	 mavenCentral()
}

dependencies {
	compile 'log4j:log4j:1.2.17'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'org.rxtx:rxtx:2.1.7'
}

jar {
	manifest {
		instruction 'Bundle-Vendor', 'serotonin'
		instruction 'Bundle-Description', 'bacnet4j'
		instruction 'Bundle-DocURL', ''
		instruction 'Bundle-Version', '1.0'
		instruction 'Import-Package', '!com.serotonin.io,!com.serotonin.messaging,!com.serotonin.util,!com.serotonin.util.queue,!org.apache.commons.lang3'
		instruction 'Export-Package', 'com.serotonin.*'
	}
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

task ipkg << {
	
	//do a filter copy of ipkg control file
	copy() {
	   from 'ipkg'
	   into 'build/ipkg'
		   include 'control.tpl'
		   filter(org.apache.tools.ant.filters.ReplaceTokens, tokens:[BUILDID:buildNumber])
		   rename 'control.tpl','control'
	}
	
	copy() {
	   from 'ipkg'
	   into 'build/ipkg'
		   include 'debian-binary'
	  }
	copy {
		from 'build/libs/'
		into 'build/renamed'
		 include '*.jar'
//		 rename '(.+)','z-$1'
	}
	
	ant.tar(tarfile: 'build/ipkg/control.tar') {
	  ant.tarfileset(prefix: './', dir: 'build/ipkg/') {
		ant.include(name: 'control')
		}
	  ant.tarfileset(prefix: './', dir: 'ipkg/', filemode:'755') {
		ant.include(name: 'postinst')
		//preinst, prerm und postrm auch noch moeglich
	  }
	}
	ant.gzip(src: 'build/ipkg/control.tar', zipfile: 'build/ipkg/control.tar.gz')

	ant.tar(tarfile: 'build/ipkg/data.tar'){
	  ant.tarfileset(prefix: './opt/osgi/bundle/framework', dir: 'build/renamed') {
		ant.include(name: '*.jar')
	  }
	}
	ant.gzip(src: 'build/ipkg/data.tar', zipfile: 'build/ipkg/data.tar.gz')

	ant.tar(tarfile:'build/ipkg/dcr.tar') {
	 ant.tarfileset(prefix: './', dir:'build/ipkg/'){
	  ant.include (name:'control.tar.gz')
	  ant.include (name:'data.tar.gz')
	  ant.include (name:'debian-binary')
	  }
	 }
	ant.gzip(src:'build/ipkg/dcr.tar', zipfile: "build/ipkg/${project.name}-${version}.ipk")
		
}

